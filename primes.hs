
-- Early haskell experimentation.  Very disorganized, and
-- probably very inefficient, although I haven't yet run into
-- a stack overflow - and the primes list in particular is pretty 
-- snappy.

import Data.Ratio

first _ [] = Nothing
first p (x:xs) = if p x
	then Just x
	else first p xs

unmaybe :: a -> Maybe a -> a
unmaybe x (Nothing) = x
unmaybe _ (Just x) = x


primes :: Integral a => [a]
primes = 2 : (filter isPrime [3,5..])

isPrime, isComposite :: Integral a => a -> Bool
isPrime 0 = False
isPrime 1 = False
isPrime 2 = True
isPrime x = not (isComposite x)
isComposite x = any (\y -> x `mod` y == 0) (takeWhile (\y -> y*y <= x) primes)

factor :: Integral a => a -> [(a,a)]
factor x = _merge (_factor x primes)
	where
		_factor 1 _ = []
		_factor x (p:plist) | (x `mod` p > 0) = _factor x plist
				    | otherwise = (p,1) : _factor (x `div` p) (p:plist)
		_merge ((f1,e1):(f2,e2):fs) | f1 == f2 = _merge ((f1,e1 + e2):fs)
					    | otherwise = (f1,e1) : _merge ((f2,e2):fs)
		_merge x = x

unfactor :: Integral a => [(a,a)] -> a
unfactor [] = 1
unfactor ((f,e):fs) = f^e * unfactor fs

cfToR :: (Integral a) => [a] -> Rational
cfToR [] = 0;
cfToR [x] = toRational x;
cfToR (x:xs) = (toRational x) + (1 / cfToR xs)

	-- floating point rounding errors pop up here very quickly :(
	-- (cf pi) is accurate to 13 places, though, which is better than I expected
cf :: (RealFrac a, Integral b) => a -> [b]
cf 0 = []
cf x = (_int x) : (cf (_recip (_frac x)))
	where
		_int x = fromInteger (floor x)
		_frac x = x - (_int x)
		_recip x = if (x == 0) then 0 else recip x

gcfToR :: Integral a => [(a,a)] -> Rational
gcfToR [] = 0;
gcfToR [(a,b)] = toRational a
gcfToR ((a,b):xs) = (toRational a) + ((toRational b) / (gcfToR xs))

fibs :: (Num a) => [a]
fibs = 0 : 1 : zipWith (+) fibs (tail fibs)

cf_e = 1 : 2 : 1 : _extend cf_e
	where _extend (x:y:z:xs) = x : (2 + y) : z : _extend xs

digits = length . show . floor . abs

	-- Pi experiments
	-- precise GCF for pi
gcf_4_pi = zip [1,3..] (map (^ 2) [1..])
gcf_pi_4 = (0,1) : gcf_4_pi
gcf_pi = (0,4) : gcf_4_pi

	-- precise CF for pi to acc parts
cf_pi acc = _cf_pi acc (acc_rqd acc)

	-- (not necessarily but usually precise) estimated CF for pi
cf_pi_est acc = _cf_pi acc (acc_rqd_guess acc)

	-- estimated cf for pi, to acc parts, using n parts of the GCF
_cf_pi acc n = take acc (cf _pi)
	where
		_pi = gcfToR (take n gcf_pi)

	-- 5701 known CF parts of pi
_cf_pi_precomputed = [3,7,15,1,292,1,1,1,2,1,3,1,14,2,1,1,2,2,2,2,1,84,2,1,1,15,3,13,1,4,2,6,6,99,1,2,2,6,3,5,1,1,6,8,1,7,1,2,3,7,1,2,1,1,12,1,1,1,3,1,1,8,1,1,2,1,6,1,1,5,2,2,3,1,2,4,4,16,1,161,45,1,22,1,2,2,1,4,1,2,24,1,2,1,3,1,2,1,1,10,2,5,4,1,2,2,8,1,5,2,2,26,1,4,1,1,8,2,42,2,1,7,3,3,1,1,7,2,4,9,7,2,3,1,57,1,18,1,9,19,1,2,18,1,3,7,30,1,1,1,3,3,3,1,2,8,1,1,2,1,15,1,2,13,1,2,1,4,1,12,1,1,3,3,28,1,10,3,2,20,1,1,1,1,4,1,1,1,5,3,2,1,6,1,4,1,120,2,1,1,3,1,23,1,15,1,3,7,1,16,1,2,1,21,2,1,1,2,9,1,6,4,127,14,5,1,3,13,7,9,1,1,1,1,1,5,4,1,1,3,1,1,29,3,1,1,2,2,1,3,1,1,1,3,1,1,10,3,1,3,1,2,1,12,1,4,1,1,1,1,7,1,1,2,1,11,3,1,7,1,4,1,48,16,1,4,5,2,1,1,4,3,1,2,3,1,2,2,1,2,5,20,1,1,5,4,1,436,8,1,2,2,1,1,1,1,1,5,1,2,1,3,6,11,4,3,1,1,1,2,5,4,6,9,1,5,1,5,15,1,11,24,4,4,5,2,1,4,1,6,1,1,1,4,3,2,2,1,1,2,1,58,5,1,2,1,2,1,1,2,2,7,1,15,1,4,8,1,1,4,2,1,1,1,3,1,1,1,2,1,1,1,1,1,9,1,4,3,15,1,2,1,13,1,1,1,3,24,1,2,4,10,5,12,3,3,21,1,2,1,34,1,1,1,4,15,1,4,44,1,4,20776,1,1,1,1,1,1,1,23,1,7,2,1,94,55,1,1,2,1,1,3,1,1,32,5,1,14,1,1,1,1,1,3,50,2,16,5,1,2,1,4,6,3,1,3,3,1,2,2,2,5,2,2,2,28,1,1,13,1,5,43,1,4,3,5,3,1,4,1,1,2,2,1,1,19,2,7,1,72,3,1,2,3,7,11,1,2,1,1,2,2,1,1,2,1,1,1,1,1,33,7,19,1,19,3,1,4,1,1,1,1,2,3,1,3,2,2,2,2,4,1,1,1,4,2,3,1,1,1,1,11,1,1,2,1,2,1,2,2,1,7,2,27,1,1,6,2,1,9,6,26,1,1,3,2,1,1,1,1,1,15,1,36,4,2,2,1,22,2,1,106,2,2,1,3,1,12,10,7,1,2,1,1,1,1,8,2,4,5,3,2,1,4,23,1,18,2,10,3,1,6,6,13,8,6,2,2,2,2,1,1,1,3,1,7,17,1,1,1,2,5,5,1,1,2,11,1,6,1,6,1,29,4,29,3,5,3,1,141,1,2,7,7,2,2,7,1,1,7,1,7,1,2,4,1,1,1,30,1,12,4,18,10,2,8,1,2,2,2,4,13,1,5,4,1,6,1,1,11,2,4,2,1,1,3,3,12,1,1,39,5,1,1,16,125,1,4,1,2,1,19,1,4,1,1,2,1,4,1,10,1,4,2,1,1,1,5,10,4,14,1,13,41,1,4,1,8,1,1,2,1,3,1,6,1,3,2,2,2,1,4,1,14,1,2,8,1,8,3,3,3,1,37,4,2,4,1,3,4,25,4,27,2,7,1,1,2,6,1,1,1,12,1,2,2,2,13,12,1,3,1,6,1,1,33,1,5,3,1,5,15,8,8,47,1,3,2,12,2,12,1,12,1,2,5,3,1,1,1,1,2,3,5,4,2,1,1,5,1,9,14,1,1,3,2,1,9,3,22,13,1,1,3,20,1,1,61,1,376,2,107,1,10,3,2,2,31,1,2,10,2,2,62,2,2,7,4,5,6,1,1,1,1,2,8,2,73,3,5,42,1,3,2,1,1,59,6,1,1,1,5,1,6,1,2,6,1,1,1,1,3,2,1,3,1,8,1,4,2,5,4,7,1,4,2,2,6,1,1,2,2,1,1,1,1,1,2,1,2,2,5,1,2,1,1,10,1,6,1,129,1,4,65,2,4,4,3,2,3,1,1,5,1,1,1,1,1,2,2,1,2,1,1,2,2,1,2,3,1,2,1,2,4,2,1,2,27,6,2,1,193,1,3,9,1,3,35,2,1,8,1,1,1,1,9,3,56,1,6,6,2,8,1,8,1,2,3,6,3,1,3,1,1,1,2,13,1,1,1,1,13,2,1,3,1,3,15,2,1,1,2,4,1,4,5,2,2,1,2,1,6,1,4,12,1,1,1,1,13,1,3,4,1,1,1,2,9,1,7,1,1,1,1,4,1,3,4,1,1,4,3,1,39,2,1,1,1,1,1,4,7,2,2,2,1,1,1,1,2,114,12,4,1,3,2,1,19,1,1,2,1,1,3,4,1,60,3,72,2,1,1,1,50,1,1,1,1,3,1,1,2,2,1,4,1,7,3,1,2,1,5,1,1,1,2,6,2,21,2,6,1,6,1,1,2,1,7,1,8,1,1,5,4,1,1,1,1,1,1,1,1,4,1,11,2,4,10,2,1,1,13,1,1,7,15,1,1,1,2,3,15,8,8,2,1,13,3,5,1,2,1,6,1,10,123,3,1,4,59,4,156,88,1,5,4,1,3,1,4,2,9,1,7,4,2,1,2,3,2,1,2,11,1,13,7,7,1,63,37,12,86,1,1,1,1,2,2,4,2,18,1,1,1,41,2,1,1,12,1,2,1,1,2,10,1,1,1,5,1,1,3,1,7,5,1,9,1,2,2,7,1,1,5,2,1,3,3,5,2,1,11,3,1,3,2,1,1,2,1,14,5,2,2,1,1,1,1,3,1,3,3,2,2,1,3,2,1,2,1,4,1,14,1,1,58,7,1,2,1,1,5,1,2,1,5,18,1,4,3,1,1,1,4,1,1,2,5,1,148,1,9,2,1,2,1,5,4,93,1,1,2,4,1,2,73,1,1,3,1,1,1,1,2,1,34,1,5,6,1,2,1,3,4,1,16,28,17,2,5,5,26,1,1,4,12,1,3,2,1,5,1,2,9,3,2,41,1,16,2,2,20,1,17,1,6,16,3,3,2,2,2,18,15,1,1,51,4,9,5,2,2,1,2,1,45,3,1,1,3,1,2,1,3,1,1,3,5,1,2,3,8,2,47,2,3,1,1,1,15,9,1,8,2,1,4,2,4,14,1,12,2,1,161,1,26,2,1,2,1,1,1,1,2,2,1,18,528,12,4,1,5,16,3,1,1,1,1,1,5,1,2,1,63,1,97,1,4,4,10,5,9,5,2,3,2,5,7,1,32,13,1,5,4,1,7,1,3,12,1,3,9,1,7,1,102,53,1,1,1,3,4,2,15,2,8,2,2,3,1,2,4,1,1,3,2,3,1,1,2,3,1,1,6,1,1,14,1,80,11,1,1,1,1,22,1,2,3,1,3,26,2,24,2,2,4,3,1,1,1,1,3,1,63,1,1,1,25,1,1,1,8,1,3,3,1,10,5,6,2,1,1,3,1,1,1,1,2,2,1,2,8,12,1,53,1,2,1,1,5,1,1,3,1,39,1,12,1,3,14,18,9,3,2,2,2,1,1,3,1,4,4,7,1,17,1,14,1,1,1,1,3,1,1,10,1,2,2,3,1,2,1,2,2,2,12,1,3,44,2,10,1,14,1,2,1,43,4,1,7,3,4,1,1,2,2,1,34,1,2,5,8,3,2,1,2,13,4,3,2,1,1,1,1,25,1,5,1,94,2,4,3,4,5,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,10,41,1,5,1,4,4,1,155,1,8,1,1,1,1,4,1,1,2,9,2,1,2,1,1,1,6,23,1,2,3,5,2,1,1,1,1,7,67,5,7,1,23,3,3,1,6,1,11,1,57,1,4,1,5,1,1,8,1,1,2,5,2,10,1,1,2,1,1,3,1,2,1,3,1,11,2,10,1,4,18,1,2,3,1,1,6,3,6,4,31,3,4,1,18,3,9,7,5,1,2,2,1,7,1,23,2,217,1,2,1,4,1,54,2,196,10,3,1,32,1,40,55,1,5,1,3,3,1,2,2,1,3,6,3,16,1,31,1,5,6,1,4,42,4,1,10,1,3,1,3,3,1,2,1,1,1,4,1,13,1,88,1,1,1,14,3,27,3,1,1,16,4,1,2,4,1,4,1,1,17,2,4,1,1,9,2,1,1,3,1,1,30,1,1,3,2,2,1,1,4,10,1,7,1,6,1,35,1,1,2,3,6,1,1,2,4,4,24,1,1,1,1,1,1,3,1,1,2,1,2,1,6,6,2,1,1,10,6,4,2,1,3,9,1,2,16,1,5,1,1,1,1,6,5,1,13,5,4,1,2,3,1,1,1,3,1,30,2,5,1,1,1,1,2,3,1,2,3,1,1,1,1,1,6,5,3,65,48,3,3,6,1,9,2,1,5,6,2,1,1,1,1,620,8,1,1,4,8,1,6,1,5,8,1,5,1,4,9,47,3,1,6,1,25,1,3,425,2,3,3,17,1,2,3,2,3,1,1,1,5,2,1,41,1,1,1,1,3,1,5,1,1,6,256,17,1,14,1,2,3,1,2,2,2,4,9,7,3,3,18,1,33,1,5,2,4,25,1,2,1,6,1,3,4,16,4,2,2,7,3,1,14,2,1,2,1,3,3,1,4,1,59,1,121,9,1,2,1,11,1,20,1,9,2,1,3,391,1,2,8,3,4,1,1,3,13,1,95,2,2,4,21,1,21,2,8,13,3,1,1,1,5,1,8,1,15,1,252,3,4,2,15,1,1,1,5,2,6,11,1,10,41,1,4,2,2,1,1,1,5,1,1,1,2,2,1,1,1,2,2,1,2,2,2,2,1,24,8,21,3,3,9,14,9,1,9,3,1,2,3,2,2,2,9,1,5,3,7,1,2,1,6,1,1,3,6,1,1,1,1,1,1,1,15,2,4,1,1,7,1,2,1,1,15,2,1,5,1,1,13,1,2,1,1,1,5,2,21,1,1,1,1,13,1,1,10,1,6,2,11,1,2,7,1,7,1,16,1,4,3,1,2,1,7,1,3,1,4,9,2,1,1,1,1,23,1,1,4,1,4,3,1,2,2,2,1,3,1,1,5,1,1,1,6,106,1,1,1,7,2,18,1,1,1,4,1,2,4,20,2,1,3,1,5,1,3,1,50,1,2,14,2,1,1,2,1,2,2,1,1,3,3,1,1,4,1,1,1,13,8,3,2,1,8,5,1,6,1,50,1,2,3,8,1,3,5,2,1,8,8,1,1,10,2,1,1,1,2,13,1,4,10,1,1,1,1,26,2,22,3,7,6,1,2,3,28,3,17,3,1,1,1,4,1,5,2,4,5,1,2,1,1,1,4,1,2,5,1,1,1,4,1,2,5,2,193,2,1,47,1,4,1,6,1,4,1,6,23,4,1,20,2,3,32,1,6,1,4,1,3,1,10,1,3,1,1,2,5,2,1,1,1,93,1,1,11,8,1,1,1,1,2,15,4,1,7,1,3,2,1,1,1,9,10,1,6,1,4,5,3,1,11,1,6,5,1,1,1,1,3,1,152,3,1,4,3,7,1,473,1,1,1,3,108,2,1,3,3,3,6,1,1,1,18,1,51,2,2,5,2,2,1,1,15,6,10,1,6,1,1,6,8,2,33,1,6,2,5,3,1,13,1,2,1,2,3,2,1,5,1,2,1,2,1,10,4,2,1,2,6,23,4,1,3,1,5,1,3,5,3,1,3,2,5,8,1,4,5,1,1,18,6,1,1,43,1,8,1,22,1,9,5,1,2,1,15,16,1,1,5,4,3,7,1,1,1,4,1,1,3,3,1,2,16,2,7,1,17,3,28,5,15,5,1,8,3,1,141,1,9,7,2,5,1,1,7,5,30,1,6,2,2,6,1,4,3,3,10,22,14,1,2,3,21,4,1,1,1,12,1,9,4,2,1,7,1,1,1,10,1,3,1,1,1,1,1,1,6,1,10,1,7,8,2,1,1,1,5,8,5,9,37,4,1,17,1,2,1,3,1,5,2,1,4,15,2,2,5,1,1,1,6,1,1,20,48,1,5,17,2,7,7,1,16,1,37,3,2,1,2,5,1,1,1,4,3,2,3,16,1,2,18,2,1,1,1,1,1,4,1,3,5,1,2,23,2,3,1,4,13,7,1,5,1,2,1,1,30,1,7,4,1,1,1,15,1,17,1,4,1,1,1,2,188,1,5,2,2,19,2,1,2,1,70,1,2,1,2,3,1,4,1,1,1,4,1,3,1,1,2,1,1,5,5,2,1,2,7,2,2,1,1,2,2,1,31,8,1,1,3,1,1,1,1,3,15,2,1,3,1,1,3,24,4,1,1,7,2,12,4,2,2,1,15,1,1,1,1,2,1,9,1,2,2,3,1,2,9,1,1,3,1,1,7,1,12,1,3,1,2,1,3,6,6,1,1,1,1,10,2,10,1,2,2,2,5,12,1,2,3,4,10,1,1,3,2,4,1,37,1,4,2,1,1,67,1,1,6,2,1,2,2,3,1,2,2,1,5,2,2,1,1,6,2,1,1,47,57,1,1,1,1,2,2,7,5,2,2,2,3,7,1,4,1,1,6,1,4,1,3,1,1,1,4,16,49,1,1,1,1,2,1,2,1,3,1,2,1,1,38,2,3,2,3,25,6,1,1,12,3,5,3,4,7,1,1,2,7,1,9,1,5,2,1,1,1,33,2,6,3,1,10,1,1,2,43,2,1,1,2,3,1,4,310,2,7,2,53,211,2,2,2,1,1,3,7,1,1,8,2,3,2,2,1,2,1,2,1,9,3,11,1,2,1,2,4,1,1,1,1,5,2,2,1,17,1,1,1,2,1,1,1,1,1,6,4,3,3,11,23,2,1,5,12,21,2,1,2,3,6,5,1,1,1,1,1,210,15,1,1,16,3,1,2,4,1,2,20,3,3,3,3,3,1,23,29,1,23,24,1,2,3,1,2,7,1,5,80,1,2,4,2,2,32,2,4,16,3,46,2,5,1,113,4,1,6,1,1,2,1,1,1,16,1,2,1,5,4,7,1,1,5,1,31,1,2,1,3,1,14,3,1,2,5,1,1,17,3,2,3,1,2,10,2,2,1,1,325,1,85,3,1,4,55,3,1,3,14,1,5,1,6,4,6,30,3,1,11,1,1,1,1,1722,1,87,24,5,1,1,16,1,15,23,8,3,3,15,1,1,292,2,6,2,1,98,3,1,2,4,1,5,2,1,1,1,1,2,2,2,1,2,8,1,2,33,3,3,2,3,9,6,4,4,5,7,1,13,7,1,2,2,21,4,1,8,3,19,7,1,1,50,1,3,1,1,17,1,4,5,2,3,1,2,2,1,18,4,38,1,33,4,2,1,57,1,1,6,1,1,4,1,2,104,3,5,8,1,1,7,1,4,1,52,1,5,1,5,1,4,84,1,2,8,8,2,1,1,1,1,2,1,111,1,12,1,1,18,4,2,3,1,9,2,1,40,1,1,1,1,2,1,1,1,9,1,5,1,3,2,2,2,1,1,204,36,1,1,4,118,1,8,3,2,1,12,1,1,1,2,1,31,1,4,5,1,11,2,55,1,17,1,1,1,6,6,1,4,5,8,1,5,1,14,1,1,3,2,5,1,1,1,3,1,1,2,1,2,5,1,1,5,20,11,1,1,2,1,1,2,1,3,4,46,2,4,1,1,1,10,2,1,5,1,2,4,22,2,7,1,1,1,10,1,1,1,1,2,1,1,2,1,2,10,11,7,3,1,1,1,7,1,1,8,1,8,1,2,2,3,6,2,36,1,2,1,4,3,1,1,1,1,1,4,2,3,1,7,3,4,4,1,1,1,2,54,16,1,7,19,2,4,1,1,1,2,7,1,1,5,3,4,1,4,18,1,1,1,1,1,8,3,1,8,1,2,1,1,4,1,1,1,2,3,7,6,1,1,8,2,3,2,13,1,1,1,1,7,1,3,1,10,2,1,3,2,5,1,1,1,2,142,2,1,1,1,3,7,1,16,4,1,84,1,14,1,39,1,1,33,1,1,1,1,5,1,2,2,6,1,1,5,1,1,1,4,2,2,1,4,5,1,2,1,3,1,1,1,10,3,2,1,9,2,10,1,6,1,1,1,1,2,2,14,3,1,5,2,4,1,3,29,2,2,2,4,1,18,1,4,1,1,2,3,3,4,1,3,2,1,1,1,2,4,1,1,1,1,46,1,1,3,4,3,212,3,1,2,1,1,4,8,1,74,1,2,1,5,1,1,9,1,1,1,1,3,80,2,1,3,1,1,2,2,4,4,1,2159,5,8,4,1,1,4,2,2,5,1,5,2,2,2,44,1,1,1,23,2,1,6,1,1,1,13,46,2,2,7,3,18,1,8277,35,29,2,1,2,2,6,1,5,2,1,5,2,242,4,1,4,1,1,4,1,7,1,1,2,3,1,1,1,7,1,28,1,50,10,2,37,13,1,1,1,2,2,2,3,1,1,1,5,2,1,4,1,1,520,10,2,8,1,4,1,39,3,1,1,6,1,1,1,9,1,1,7,10,1,1,5,1,1,2,6,2,5,5,4,1,12,1,6,2,4,3,1,1,9,1,1,1,1,1,3,5,1,588,1,3,1,6,1,8,8,1,2,1,2,1,1,7,4,1,13,1,58,1,4,1,6,5,1,17,1,1,1,63,1,4,2,1,2,14,1,3,5,1,1,61,1,1,3,5,2,3,1,2,11,1,2,3,1,1,2,7,2,1,2,4,1,10,1,5,1,2,2,1,5,1,1,5,1,1,7,1,1,4,11,1,1,1,3,2,6,1,3,2,1,4,6,2,1,7,1,17,12,1,1,7,7,1431,5,1,10,2,4,9,1,7,2,2,5,1,1,1,3,1,8,1,1,1,1,17,1,1,1,1,1,3,1,1,2,3,73,7,4,1,2,1,5,1,2,1,1,1,2,3,4,6,1,1,1,3,1,2,10,21,9,3,1,5,1,1,7,6,3,4,19,11,1,1,1,6,5,3,1,8,4,2,1,1,1,1,2,1,2,4,12,3,6,1,1,5,1,1,1,1,1,1,3,9,1,1,92,3,26,1,212,2,1,2,2,1,1,2,1,1,1,1,2,5,6,1,1,41,1,7,4,1,8,1,5,2,1,1,2,4,2,15,1,1,1,1,1,1,2,3,1,1,2,10,8,1,12,2,1,1,1,10,1,12,5,1,3,1,1,1,1,3,1,1,1,5,331,1,1,1,22,3,1,3,3,2,2,1,1,21,2,1,1,57,2,2,1,5,1,117,21,7,19,1,3,1,1,1,5,4,4,7,3,2,3,1,3,4,2,21,1,5,1,2,1,143,1,1,4,1,1,2,6,2,1,1,2,3,49,1,3,2,31,2,1,32,1,2,1,1,1,1,1,2,2,1,1,2,5,1,7,1,1,1,7,1,2,5,1,2,1,1,1,12,5,5,1,2,2,27,1,1,1,2,1,21,1,4,1,4,1,6,7,1,1,1,1,2,4,2,21,2,3,1,4,1,501,1,1,11,7,3,1,2,6,9,1,1,15,3,1,3,1,3,1,4,1,40,1,1,22,154,1,5,7,1,2,3,8,1,5,1,3,1,4,1,5,8,1,1,2,1,1,1,1,5,10,1,1,2,2,1,1,5,1,2,4,5,1,1,23,1,47,1,17,9,4,2,1,3,20,1,1,2,180,1,1,2,6,1,9,1,2,1,1,2,5,1,7,1,4,1,1,2,1,21,2,1,3,1,2,6,1,15,2,3,3,1,1,18,27,1,9,19,1,6,1,2,1,1,12,3,23,1,1,1,42,1,3,1,6,1,7,1,4,1,7,4,1,1,3,3,46,8,1,3,10,6,1,2,3,1,42,1,4,1,2,6,3,1,1,1,6,1,5,1,2,9,1,2,9,37,4,2,4,2,9,1,5,2,4,1,2,1,18,5,2,3,2,3,4,1,27,11,1,3,1,3,1,7,1,13,2,1,1,1,1,1,9,4,2,1,1,9,1,1,15,8,1,3,4,2,7,1,4,134,5,1,57,2,18,2,9,1,1,3,1,4,2,3,1,1,2,1,8,2,2,1,1,1,2,35,2,1,3,2,1,7,1,11,1,1,1,1,7,1,1,3,7,1,1,4,1,1,63,1,1,1,14,527,3,1,1,3,1,19,1,3,2,1,1,44,1,2,1,1,3,17,3,1,3,1,3,2,3,9,1,75,5,34,3,3,3,1,55,2,1,1,1,29,5,15,1,3,1,1,8,1,82,2,1,1,2,1,4,13,1,2,2,172,3,12,6,2,1,19,1,1,27,2,2,1,1,2,1,1,6,1,2,1,6,2,1,4,2,1,4,1,3,2,2,2,4,1,1282,1,2,1,2,1,17,1,14,2,2,2,4,2,1,1,3,2,1,2,1,1,4,1,4,1,1,1,2,4,1,3,3,1,1,1,1,1,204,1,2,3,2,1,3,4,1,1,3,1,5,4,18,4,1,1,12,1,2,3,1,1,1,5,1,5,3,5,2,1,9,1,2,1,1,4,3,1,1,4,3,29,8,3,5,2,1,1,1,9,1,1,4,3,1,1,2,4,5,2,3,2,1,1,4,1,1,16,1,12,4,1,1,2,1,1,36,3,5,6,1,1,6,1,1,1,2,2,89,3,2,3,2,1,3,1,1,6,1,15,15,1,5,5,9,4,3,1,1,16,1,1,2,1,4,4,1,1,11,8,1,1,1,1,52,4,4,2,1,1,2,3,1,2,1,8,1,1,3,1,1,2,5,1,2,1,2,2,3,2,18,9,1,4,8,2,31,1,1,164,4,3,2,1,8,12,2,78,6,3,3,14,10,1,26,2,6,34,1,7,12,1,1,2,2,1,1,4,1,12,2,19,2,1,20,1,38,1,4,1,2,8,1,9,3,3,11,1,2,1,1,1,8,1,2,2,1,1,1,1,1,3,2,1,2,14,1,2,8,3,1,1,3,7,1,1,13,1,5,1,2,1,58,1,1,1,14,2,1,3,19,1,13,7,1,4,5,1,2,1,2,2,1,1,1,8,1,1,2,22,1,1,1,2,1,2,14,2,1,1,23,5,9,1,1,335,1,8,1,3,3,3,3,1,2,3,1,1,1,5,1,8,1,1,2,1,2,8,2,3,1,3,1,3,4,4,2,1,134,45,1,1,20,3,1,1,1,18,1,2,1,10,1,14,1,3,2,21,47,2,1,1,1,6,8,1,3,1,2,9,1,72,1,51,2,1,1,2,2,1,1,1,2,2,2,1,6,5,6,2,6,24,3,275,1,1,2,3,1,5,1,6,2,1,7,1,1,3,2,3,11,1,2,3,1,11,1,3,9,2,20,5,10,82,1,24,1,6,12,3,1,11,2,7,16,1,4,1,2,5,1,4,1,1,1,14,1,2,3,7,2,1,2,1,13,3,7,1,2,5,1,14,1,1,1,3,1,1,14,1,8,1,1,18,1,1,1,27,8,3,1,8,11,3,1,2,10,5,1,2,1,2,28,1,1,8,1,1,2,6,1,2,1,1,3,8,4,5,2,1,1,2,4,2,1,1,22,1,1,25,1,1,1,3,4,1,415,63,1,6,5,1,1,2,1,9,6,1,5,1,3,5,1,1,81,14,1,5,2,3,1,2,1,12,1,1,26,3,10,5,4,2,5,22,3,1,5,9,1,4,1,12,2,4,4,4,1,2,1,6,2,2,1,2,2,5,1,19,1,2,1,1,1,1,2,2,7,2,6,1,35,2,3,2,10,1,22,1,12,3,3,2,1,1,2,1,1,1,1,1,6,2,1,5,2,2,1,1,12,1,3,2,1,1,15,1,1,2,4,4,1,6,21,1,1,10,24,1,3,1,1,1,4,1,5,4,3,1,1,1,45,1,1,1,1,6,2,7,12,3,1,3,1,4,9,1,2,6,9,4,4,1,3,1,4,1,8,5,3,2,2,1,1,1,78,1,1,8,104,2,37,1,1,2,1,1,3,1,1,6,3,1,3,2,2,1,2,1,25,1,9,6,3,4,2,1,2,1,2,19,1,3,1,4,1,2,1,39,4,3,6,7,1,16,1,7,1,2,1,5,3,2,1,4,4,9,1,2,4,4,1,8,4,1,1,6,2,1,14,2,1,2,1,77,1,1,1,1,12,4,2,1,4,1,1,4,1,1,2,6,10,1,5,1,3,2,4,48,2,1,7,4,1,2,4,1,49,1,4,2,2,1,1,2,1,1,1,1,2,21,5,1,8,5,20,3,1,4,1,116,7,62,8,1,1,7,1,3,6,2,17,9,1,1,1,2,1,9,1,5,1,1,1,3,1,2,2,1,25,11,1,1,1,3,1,2,1,1,1,1,1,1,6,1,1,1,1,1,1,3,1,1,1,7,1,64,2,4,5,2,1,12,13,1,1,1,11,1,1,2,1,1,1,2,1,1,16,30,1,4,1,3,4,1,5,1,6,1,10,14,1,2,1,7,4,1,3,1,1,5,9,1,3,1,5,2,1,1,8,1,6,1,27,1,8,1,6,3,3,2,1,28,2,9,13,172,1,3,2,10,2,2,4,1,2,1,3,1,1,2,3,1,5,1,19,3,1,3,1,3,2]

acc_rqd x = acc_rqd_list !! (x + 1)
acc_rqd_list = _acc_rqd_precomputed ++ _compute_remaining (length _acc_rqd_precomputed) (last _acc_rqd_precomputed)
	where
		_compute_remaining lastX lastY = y : (_compute_remaining x y)
			where
				x = lastX + 1
				y =  unmaybe lastY (first (_accurate_enough x) [lastY..])

_acc_rqd_precomputed = [3,5,9,9,15,15,15,16,17,18,19,19,22,23,23,24,25,26,27,28,28,33,35,36,36,39,40,42,43,45,46,47,50,55,55,56,58,59,60,62,63,63,66,68,68,70,71,72,74,76,76,77,77,77,81,81,81,82,83,84,84,87,87,88,89,89,91,92,92,94,95,96,97,98,99,101,102,106,106,111,115,115,119,119,120,122,122,124,124,125,129,129,129,130,131,132,133,134,134,136,138,139,141,141,142,143,145,146,148,149,150,154,154,155,155,157,159,159,164,164,166,167,168,170,171,171,173,174,176,179,180,181,183,183,187,189,191,191,194,197,197,199,201,202,204,205,209,210,211,211,212,213,215,215,216,219,219,220,221,221,224,224,226,228,229,230,230,232,232,235,235,236,237,239,243,243,245,246,248,250,251,252,253,253,255,255,255,256,258,259,261,261,263,263,265,265,270,271,271,272,273,273,277,277,281,281,282,284,284,288,288,290,290,293,293,294,295,295,299,299,300,303,308,311,313,313,314,317,320,322,323,323,323,324,324,327,328,328,329,330,331,331,335,336,337,337,338,340,340,341,341,342,343,344,345,345,348,350,350,351,351,352,352,356,356,358,358,358,359,359,361,362,363,364,364,367,369,369,371,371,373,373,378,380,380,383,384,385,385,386,388,389,389,391,392,392,393,394,395,396,398,401,401,402,404,406,406,413,415,415,416,418,418,418,419,420,420,422,422,424,424,425,428,430,432,433,433,434,435,435,438,439,442,444,444,446,446,447,451,451,454,457,459,461,462,464,464,466,466,468,469,470,470,471,472,473,475,476,476,476,478,481,483,484,485,485,486,486,487,488,490,492,492,494,495,497,499,500,500,502,503,503,503,504,505,506,507,507,508,508,509,510,511,511,513,513,515,517,519,520,521,521,524,524,525,526,528,530,531,532,534,537,538,541,542,543,547,547,549,549,553,553,553,554,556,558,559,561,565,565,566,578,579,579,579,580,581,582,582,586,586,587,589,589,594,598,599,599,601,602,602,603,603,603,608,610,610,612,613,614,614,614,615,617,621,623,625,627,627,628,629,631,632,634,634,635,637,637,638,639,640,642,643,644,646,649,649,649,653,653,654,659,659,661,662,664,665,666,667,668,669,669,671,672,672,675,676,678,678,683,685,685,686,687,690,692,692,694,694,694,695,696,697,697,699,699,699,700,701,701,706,707,711,711,714,716,716,718,718,718,719,720,720,722,722,724,725,726,727,727,729,730,731,731,732,733]

_accurate_enough acc n = ((take acc _cf_pi_precomputed) == (_cf_pi acc n))

	-- a guess as to the number of GCF elements required to accurately compute X elements of the regular CF of pi
acc_rqd_guess x = if (x <= length _acc_rqd_precomputed) then (acc_rqd x) else floor (1.3587 * (toRational x))





	-- Farey sequence
farey :: Integer -> [Rational]
farey n = 0%1 : 1%n : _farey (zip (farey n) (tail (farey n)))
	where
		_farey ((x,y):xs) = if (y == 1) then [] else ((k*c-a)%(k*d-b): (_farey xs))
			where
				a = numerator x
				b = denominator x
				c = numerator y
				d = denominator y
				k = floor (fromRational ((n + b) % d))

farey100 = 0%1 : 1%100 : _farey (zip (farey100) (tail (farey100)))
	where
		_farey ((x,y):xs) = if (y == 1) then [] else ((k*c-a)%(k*d-b): (_farey xs))
			where
				a = numerator x
				b = denominator x
				c = numerator y
				d = denominator y
				k = floor (fromRational ((100 + b) % d))
